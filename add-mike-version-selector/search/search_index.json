{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TIDES","text":"<p>Transit ITS Data Exchange Specification (TIDES) for historical transit operation data.</p> <p>This repository provides data schemas and tools to support the access, management, and improvement of historical transit operations data, including vehicle operations, passenger activity, fare collection, and other similar data.</p>"},{"location":"#tides-specification","title":"TIDES specification","text":"<p>The TIDES specification is maintained in the <code>/spec</code> sub-directory as a series of JSON tables compatible with the frictionless data table schema standards. Human-friendlier documentation is auto-generated and available at:</p> <ul> <li>Architecture</li> <li>Table Schemas</li> </ul>"},{"location":"#contributing-to-tides","title":"Contributing to TIDES","text":"<p>Those who want to help with the development of the TIDES specification should review the guidance in CONTRIBUTING.md.</p>"},{"location":"#issues","title":"Issues","text":"<p>Please add issues, bugs, and feature requests to GitHub.</p>"},{"location":"#acknowledgment","title":"Acknowledgment","text":"<p>These data schemas and tool definitions developed here are based on the results of research conducted by the Transportation Research Board (TRB) of the National Academies of Science, Engineering, and Medicine (NASEM) under the Transit Cooperative Research Program (TCRP). This research is available at the National Academies website.</p> <p>Note that neither the TIDES Project nor the TIDES-transit repository are associated with TCRP, TRB, or the Academies. The use of the TCRP research results in this repository do not reflect any explicit or implicit endorsement of or participation in this work by the Academies. In addition, the opinions and conclusions expressed or implied in the research are those of the contractor. They are not necessarily those of the Transportation Research Board, the Academies, or the program sponsors.</p>"},{"location":"architecture/","title":"TIDES Tables Schema","text":"<p>Schemas for TIDES suite.</p>"},{"location":"architecture/#files-in-specification","title":"Files in Specification","text":"<p>TIDES consists of a package of files as defined in the following table.</p> <p>The following table is automatically generated from <code>tides.spec.json</code></p> name description required <code>vehicle-locations</code> Timestamped vehicle locations and speeds. False <code>passenger-events</code> Timestamped passenger-related events, including boardings and alightings. False <code>fare-transactions</code> Timestamped fare transaction, associated with devices. False <code>stop-visits</code> Summarized boarding, alighting, arrival, departure, and other events (kneel engaged, ramp deployed, etc.) by trip and stop for each service date. False <code>trips-performed</code> Trips performed for each service date. False <code>station-activities</code> Summarized transactions, entries, and exits by stop or station and time period for each service date (for events not associated with a trip). False <code>devices</code> Measurement devices, such as AVL, APC, and AFC devices, associated with vehicles or stops or stations. False <code>train-cars</code> Assets that comprise vehicles, such as train cars, with descriptive information. False <code>vehicle-train-cars</code> Relationships between assets and vehicles. False <code>vehicles</code> Vehicles, including buses and train consists, with descriptive information. False <code>operators</code> Personnel who operate vehicles. False <p>File components for TIDES are specified in <code>tides.spec.json</code> in a format compatible with the frictionless data data package standard.</p>"},{"location":"architecture/#relationships","title":"Relationships","text":"<p>Files in the TIDES suite are related to each other and other open standards as follows:</p> graph LR;     avl(((AVL))) --&gt; vehicle_locations[/vehicle_locations/]     APC --&gt; passenger_events[/passenger_events/]     AFC --&gt; fare_transactions[/fare_transactions/]     vehicle_locations --&gt; summary[Summary Process]     fare_transactions --&gt; summary     passenger_events --&gt; summary     summary --&gt; |stop_id,trip_id,vehicle_id|stop_visits[/stop_visits/]     summary --&gt;|stop_id| station_activities[/station_activities/]     summary --&gt; trips_performed[/trips_performed/]     trips.txt[/trips.txt/] --&gt; |trip_id| stop_times.txt[/stop_times.txt/]     stops.txt[/stops.txt/] --&gt; |stop_id|stop_times.txt     calendar.txt[/calendar.txt/] --&gt; |service_id|stop_times.txt     vehicle_train_cars[/vehicle_train_cars/] -.vehicle_id.- vehicles[/vehicles/]     vehicle_train_cars -.- |train_car_id| train_cars[/train_cars/]     train_cars -.- |train_car_id| devices[/devices/]     vehicles  --- |vehicle_id| devices     vehicles --&gt; |vehicle_id|trips_performed     operators[/operators/] -.-&gt; |operator_id| trips_performed     stop_times.txt --&gt; |stop_id,stop_sequence| stop_visits     stop_times.txt --&gt; |trips.txt| trips_performed     stops.txt --&gt; |stop_id|station_activities     stop_times.txt --&gt; |stop_id,stop_sequence| vehicle_locations     stop_times.txt --&gt; |stop_id,stop_sequence| passenger_events     stop_times.txt --&gt; |stop_id,stop_sequence| fare_transactions     subgraph eventf [Event Data]         vehicle_locations         passenger_events         fare_transactions     end     subgraph summaryf [Summary Files]         station_activities         stop_visits         trips_performed     end     subgraph gtfs [ GTFS ]         stop_times.txt         stops.txt         trips.txt         calendar.txt     end     subgraph proposedGTFS [ Proposed GTFS ]         train_cars         vehicle_train_cars         vehicles     end     subgraph additional [ Additional Data ]         devices         operators     end     click stops.txt \"https://gtfs.org/schedule/reference/#stopstxt\"     click stop_times.txt \"https://gtfs.org/schedule/reference/#stop_timestxt\"     click calendar.txt \"https://gtfs.org/schedule/reference/#calendartxt\"     click trips.txt \"https://gtfs.org/schedule/reference/#tripstxt\"     click station_activities \"../tables/#station-activities\"     click stop_visits \"../tables/#stop-visits\"     click train_cars \"../tables/#train-cars\"     click vehicle_train_cars \"../tables/#vehicle-train-cars\"     click vehicles \"../tables/#vehicles\"     click devices \"../tables/#devices\"     click vehicle_locations \"../tables/#vehicle-locations\"     click passenger_events \"../tables/#passenger-events\"     click fare_transactions \"../tables/#fare-transactions\"  <p>Relationship of <code>trip_id_scheduled</code> to GTFS Schedule <code>trip_id</code></p> <p><code>trip_id_scheduled</code> in TIDES and <code>trip_id</code> in GTFS Schedule should be consistent when a performed trip exists in the published GTFS Schedule.</p> <p>If a trip does not exist in the published GTFS Schedule, <code>trip_id_scheduled</code> values in TIDES do not have any assumed relationship with GTFS.</p>"},{"location":"contributors/","title":"Contributors","text":""},{"location":"development/","title":"Development","text":""},{"location":"development/#contributing-to-tides","title":"Contributing to TIDES","text":"<p>Thank you for contributing to the TIDES Project.  This document defines the roles and process for contributing to the project and documents the governance roles and approach for decision-making.</p>"},{"location":"development/#roles","title":"Roles","text":"<p>There are two types of contributors to TIDES:</p> <ul> <li>Registered Contributors can create and respond to issues and can generate and comment on pull requests, and</li> <li>All other Stakeholders can create and respond to issues.</li> </ul> <p>All contributors and stakeholders are asked to adhere to the Code of Conduct.</p> <p>To become a registered Contributor, fill out the registration form at this link.</p>"},{"location":"development/#how-to-contribute","title":"How to Contribute","text":"<p>Contributions should be offered through GitHub issues and pull requests.</p> <p>By making any contribution to the projects, contributors self-certify to the Contributor Agreement.</p>"},{"location":"development/#setup","title":"Setup","text":"<ol> <li>Make sure you have a GitHub account.  </li> <li>Make sure you have git, a terminal (e.g. Mac Terminal, CygWin, etc.), and a text editor installed on your local machine.  Optionally, you will likely find it easier to use GitHub Desktop, an IDE instead of a simple text editor like VSCode, Eclipse, Sublime Text, etc.  </li> <li>Fork the repository into your own GitHub account and clone it locally.  </li> <li>Install development requirements packages <code>pip install -r requirements.txt</code></li> </ol>"},{"location":"development/#contribution-workflow","title":"Contribution Workflow","text":"<ol> <li>Create a branch to work on a new issue (or checkout an existing one where the issue is being worked on).  </li> <li>Make your changes.</li> <li>Run <code>pre-commit run --all</code> to check and fix formatting.</li> <li>Validate schemas if you have changed them using either act or  frictionless framework.</li> <li>Commit your work in <code>git</code></li> <li><code>push</code> your changes to Github and submit a <code>pull request</code></li> </ol> <p>Bug</p> <p>Right now some github actions are broken due to some dependencies issues, so please validate changes to schemas using the frictionless framework</p> Manually Validating TIDES Schema Files with Frictionless CLIpython <pre><code>frictionless validate spec/devices.schema.json\nfrictionless validate spec/fare_transactions.schema.json\nfrictionless validate spec/operators.schema.json\nfrictionless validate spec/passenger_events.schema.json\nfrictionless validate spec/station_activities.schema.json\nfrictionless validate spec/stop_visits.schema.json\nfrictionless validate spec/train_cars.schema.json\nfrictionless validate spec/trips_performed.schema.json\nfrictionless validate spec/vehicle_locations.schema.json\nfrictionless validate spec/vehicle_train_cars.schema.json\nfrictionless validate spec/vehicles.schema.json\n</code></pre> <pre><code>import glob\nfrom pprint import pprint\nfrom frictionless import validate\n\nschema_paths = glob.glob(\"spec/**.schema.json\")\nfor p in schema_paths:\n    report = validate(p)\n    if not report['valid']:\n        print(f\"!!! Invalid:{p}\")\n        pprint(report)\n    else: \n        print(f\"Valid:{p}\")\n</code></pre>"},{"location":"development/#issues","title":"Issues","text":"<p>Create issues to start discussion on a new topic.  If the issue is associated with a pull request, be sure to link the two.  There are shortcuts here</p>"},{"location":"development/#pull-requests","title":"Pull Requests","text":"<p>Use the following guidance in creating and responding to pull requests</p> <ul> <li>Keep pull requests small and focused. One issue is best.</li> <li>Link Pull Requests to Issues as appropriate.</li> <li>Complete the pull request template as best you can.</li> </ul>"},{"location":"development/#commits","title":"Commits","text":"<p>Use the following guidance for commits</p> <ul> <li>Provide a short, clear title.  Capitalize. No period at the end</li> <li>Wrap the body of text at 72 characters</li> </ul>"},{"location":"development/#contributor-agreement","title":"Contributor Agreement","text":"<p>By making any contribution to the projects, contributors self-certify to the following Contributor Agreement:</p> <p>By making a contribution to this project, I certify that:</p> <p>a. The contribution was created in whole or in part by me and I have the right to submit it under the open source license indicated in the file; or</p> <p>b. The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open source license (unless I am permitted to submit under a different license), as indicated in the file; or</p> <p>c. The contribution was provided directly to me by some other person who certified (a), (b) or \u00a9 and I have not modified it.</p> <p>d. I understand and agree that this project and the contribution are public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistent with this project or the open source license(s) involved.</p> <p>Attribution: This Contributor Agreement is adapted from the node.js project available here: https://github.com/nodejs/node/blob/main/CONTRIBUTING.md.</p>"},{"location":"development/#license-to-use","title":"License to Use","text":"<p>The TIDES specification is licensed under the Apache License 2.0 as defined in LICENSE file.</p>"},{"location":"development/#project-governance","title":"Project Governance","text":"<p>Ahead of Version 1.0 release, the governance for the TIDES specification is being kept limited and lightweight. The governance approach will be revisited as release of Version 1.0 approaches.</p> <p>Development of the TIDES specification shall be managed by the following groups:</p> <ul> <li>Leadership Group</li> <li>Product Management Team</li> <li>Registered Contributors</li> <li>All Other Stakeholders</li> </ul> <p>These groups will have the following rights and responsibilities:</p>"},{"location":"development/#leadership-group","title":"Leadership Group","text":"<p>The Leadership Group is responsible for overall direction and decision-making on the project including:</p> <ul> <li>approval of registered contributors</li> <li>creation, scoping, and management of working groups</li> <li>approval of the final specification for Version 1.0</li> <li>approval of changes to project governance</li> </ul> <p>Leadership Group Members</p> <ul> <li>John Levin, Metro Transit (Minneapolis-St. Paul, MN)</li> </ul> <p>Leadership Group Member GitHub Access: Admin</p>"},{"location":"development/#product-management-team","title":"Product Management Team","text":"<p>The Product Management Team (PMT) is responsible for creating and maintaining backbone standards infrastructure, processes, and resources to support the development of the TIDES specification.  The PMT will support Leadership in developing, reviewing, and recommending for approval changes to the draft specification.  The PMT will support Contributors and Stakeholders in their work on the specification.  </p> <p>PMT Group Members</p> <ul> <li>Hunter Owens, Caltrans</li> <li>Jameelah Young, Jarv.us (on behalf of Caltrans)</li> <li>Elizabeth Sall, UrbanLabs LLC (on behalf of Caltrans)</li> <li>Benjamin Bressette, Caltrans</li> <li>Joey Reid, Metro Transit (Minneapolis-St. Paul, MN)</li> </ul> <p>PMT Group Member GitHub Access: Admin</p>"},{"location":"development/#registered-contributors","title":"Registered Contributors","text":"<p>Registered Contributors actively work to develop the TIDES specification. They propose additions, modifications, and improvements to the speciation document through issues and pull requests in this GitHub repository.</p> <p>Registered Contributors must request here to be registered in order to gain access.  Requests to become a Contributor must be approved by project Leadership.</p> <p>Registered Contributor Group Members:</p> <p>The list of registered contributors is maintained in the contributors.md file.</p> <p>Registered Contributor Group GitHub Access: Write</p>"},{"location":"development/#stakeholders-group","title":"Stakeholders Group","text":"<p>Stakeholders will be informed about progress on TIDES and given the opportunity to review the specification as it is developed.  They may provide comments on the specification by creating or responding to Issues in this repository.  Stakeholders are not able to generate or comment on pull requests.  To be included as a TIDES Stakeholder, join the TIDES Project Google Group.</p> <p>Stakeholder Group Membership:</p> <ul> <li>Members of the TIDES Project Google Group</li> <li>Others who have expressed interest in following progress or contributing to TIDES, but who have not requested to be a registered Contributor</li> </ul> <p>Stakeholder Group GitHub Access: Read/Create Issues (same as general public)</p>"},{"location":"development/#review-and-approval-process","title":"Review and Approval Process","text":"<p>Prior to release of Version 1.0 of the specification, the PMT and Leadership will have final approval of all changes.   All Contributors are permitted and encouraged to discuss and comment on issues and pull requests and make recommendations for changes to the specification.</p> <p>Leadership will convene a governance group to refine this and decide the approval process for Version 1.0 and the governance and approval process for future revisions to the specification.</p>"},{"location":"development/#code-of-conduct","title":"Code of Conduct","text":"<p>Contributors to the TIDES Project are expected to read and follow the CODE_OF_CONDUCT for the project.</p>"},{"location":"development/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"development/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"development/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people  </li> <li>Being respectful of differing opinions, viewpoints, and experiences  </li> <li>Giving and gracefully accepting constructive feedback  </li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience  </li> <li>Focusing on what is best not just for us as individuals, but for the overall   community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of   any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others\u2019 private information, such as a physical or email address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"development/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>The community leaders for this effort include project Leadership and the Product Management Team as described in the Project Governance.</p> <p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"development/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"development/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at <code>tidestransit@gmail.com</code>.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"development/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"development/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"development/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"development/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"development/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"development/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla\u2019s code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"development/#contributors","title":"Contributors","text":""},{"location":"tables/","title":"Data Table Schemas","text":"<p>Data table schemas are specified in JSON and are compatible with the frictionless data table schema standards.</p>"},{"location":"tables/#event-tables","title":"Event Tables","text":""},{"location":"tables/#fare-transactions","title":"Fare Transactions","text":"<p>fare_transactions.schema.json</p> <p>Timestamped fare transaction, associated with devices.</p> <p>Primary key: {<code>transaction_id</code>}</p> name constraints type description rdfType title transaction_id RequiredUnique string Identifies the fare transaction. service_date Required date Service date. References GTFS event_timestamp Required datetime Recorded event timestamp, including for transactions that may be aggregated values associated with a trip or vehicle. amount Required number Value of the transaction. currency_type string Currency used for the transaction. References GTFS https://schema.org/currency fare_action RequiredAllowed Values - <code>Unknown action type</code>- <code>Purchase</code>- <code>Enter</code>- <code>Exit</code>- <code>Transfer entrance</code>- <code>Transfer exit</code>- <code>Add</code>- <code>Activate</code>- <code>Adjust</code>- <code>Other</code> string Indicates the type of action performed. trip_id_performed string Identifies the trip performed. May be null if the fare collection device is NOT located on a vehicle. May be null if on a vehicle but trip-level data is unavailable, in which case the data would be associated with the vehicle. ID referencing trips_performed.trip_id_performed trip_id_scheduled string Identifies the scheduled trip. May be null if the fare collection device is NOT located on a vehicle. May be null if on a vehicle but schedule data is unavailable, in which case the data would be associated with the vehicle. ID referencing trips_performed.trip_id_scheduled pattern_id string Identifies the unique stop-path for a trip, may be distinct from GTFS shapes.shape_id unique identifier for the route-pattern stop_sequence   minimum: 0 integer Ordered stop the vehicle is serving on a particular trip. May be null if the fare collection device is NOT located on a vehicle. May be null if on a vehicle but stop-level data is unavailable, in which case the data would be associated with the vehicle and/or trip. References GTFS positive integer referencing  GTFS stop_times.stop_sequence vehicle_id string Identifies the vehicle. May be null if collection device is NOT located on a vehicle. May be null if on a vehicle but vehicle data is unavailable, in which case the data would be associated with a trip and/or stop. ID referencing vehicles.vehicle_id device_id string Identifies the ITS device on which the fare transaction was performed. May be null if only a single device is reporting fare transactions on a vehicle and vehicle_id is provided. May be null if only a single device is reporting fare transactions at a stop and stop_id is provided. ID referencing devices.device_id fare_id string Identifies a fare class, as included in the GTFS Fare_attributes file. References GTFS ID referencing  GTFS fare_attributes.fare_id stop_id string Identifies the stop. References GTFS ID referencing  GTFS stops.stop_id num_riders   minimum: 0 integer The number of riders included in the transaction. fare_media_id Allowed Values - <code>Cash or coins</code>- <code>Smart card or ticket</code>- <code>Magnetic-stripe card or ticket</code>- <code>Bank card</code>- <code>Mobile NFC</code>- <code>Optical scan</code>- <code>Button pressed by driver or operator to indicate a boarding or alighting passenger.</code>- <code>Other type</code> string Indicates the fare medium that was used for the transaction. rider_category string Indicates rider category (categories defined by transit agency). For example:AdultYouthStudentSeniorOther reduced fare_product string Indicates the fare group (fare groups defined by transit agency). For example:Single ridePassEmployer sponsoredOther pass fare_period string Indicates the fare period (fare periods defined by transit agency). For example:All dayPeakOff-peakSummerOther fare_capped Required boolean Indicates if the fare charged in this transaction was modified by a fare capping policy. token_id string Identifies the individual fare instrument used for the transaction. For example, the fare card ID. balance number Stored value remaining on an account after the transaction is made."},{"location":"tables/#passenger-events","title":"Passenger Events","text":"<p>passenger_events.schema.json</p> <p>Timestamped passenger-related events, including boardings and alightings.</p> <p>Primary key: {<code>passenger_event_id</code>}</p> name constraints type description title passenger_event_id RequiredUnique string Identifies the recorded passenger event. service_date Required date Service date. References GTFS event_timestamp Required datetime Recorded event timestamp. trip_id_performed string Identifies the trip performed. If trips_performed table is used, this must be populated in order to link to it. ID referencing trips_performed.trip_id_performed trip_id_scheduled string Identifies the scheduled trip. ID referencing trips_performed.trip_id_scheduled stop_sequence Required  minimum: 0 integer Ordered stop the vehicle is serving on a particular trip. References GTFS positive integer referencing  GTFS stop_times.stop_sequence event_type RequiredAllowed Values - <code>Vehicle arrived at stop</code>- <code>Vehicle departed stop</code>- <code>Door opened</code>- <code>Door closed</code>- <code>Passenger boarded</code>- <code>Passenger alighted</code>- <code>Kneel was engaged</code>- <code>Kneel was disengaged</code>- <code>Ramp was deployed</code>- <code>Ramp was raised</code>- <code>Ramp deployment failed</code>- <code>Lift was deployed</code>- <code>Lift was raised</code>- <code>Individual bike boarded</code>- <code>Individual bike alighted</code>- <code>Bike rack deployed</code> string Indicates the type of event recorded. vehicle_id Required string Identifies a vehicle. ID referencing vehicles.vehicle_id device_id string Identifies the device that recorded the event. May be null if only a single device is reporting passenger events on a vehicle/ train car and the device_id is not distinct from vehicle_id/train_car_id. ID referencing devices.device_id train_car_id string Identifies the train car. ID referencing train_cars.train_car_id stop_id string Identifies the stop the vehicle is serving. References GTFS ID referencing  GTFS stops.stop_id pattern_id string Identifies the unique stop-path for a trip, may be distinct from GTFS shapes.shape_id unique identifier for the route-pattern event_count   minimum: 0 integer Count for this event, e.g., 3 for a Passenger Boarding event with 3 boardings, default is  <code>1</code> Event count"},{"location":"tables/#vehicle-locations","title":"Vehicle Locations","text":"<p>vehicle_locations.schema.json</p> <p>Timestamped vehicle locations and speeds.</p> <p>Primary key: {<code>location_ping_id</code>}</p> name constraints type description title location_ping_id RequiredUnique string Identifies the recorded vehicle location event. service_date date Service date. References GTFS event_timestamp Required datetime Recorded event timestamp. trip_id_performed string Identifies the trip performed. If trips_performed table is used, this must be populated in order to link to it. ID referencing trips_performed.trip_id_performed trip_id_scheduled string Identifies the scheduled trip. ID referencing trips_performed.trip_id_scheduled stop_sequence integer Ordered stop the vehicle is approaching or serving on a particular trip. References GTFS positive integer referencing  GTFS stop_times.stop_sequence vehicle_id Required string Identifies a vehicle. ID referencing vehicles.vehicle_id device_id string Identifies the device that recorded the vehicle location. May be null if only a single device is reporting vehicle location and the device_id is not distinct from vehicle_id. ID references devices.device_id pattern_id string Identifies the unique stop-path for a trip, may be distinct from GTFS shapes.shape_id unique identifier for the route-pattern stop_id string Identifies the stop the vehicle is approaching or serving currently. References GTFS ID referencing  GTFS stops.stop_id current_status Allowed Values - <code>Incoming at</code>- <code>Stopped at</code>- <code>In transit to</code> string Indicates the status of the vehicle in reference to a stop. References GTFS-Realtime latitude   minimum: -90  maximum: 90 number Degrees North, in the WGS-84 coordinate system. References GTFS-Realtime longitude   minimum: -180  maximum: 180 number Degrees East, in the WGS-84 coordinate system. References GTFS-Realtime gps_quality Allowed Values - <code>Excellent</code>- <code>Good</code>- <code>Poor</code> string Indicates the quality of data and communication provided by the GPS. heading   minimum: 0  maximum: 360 number Heading, in degrees, clockwise from true north, e.g., 0 would mean north and 90 would mean east. This can be the compass bearing, or the direction towards the next stop or intermediate location. This should not be deduced from the sequence of previous positions, which clients can compute from previous data. References GTFS-Realtime speed   minimum: 0 number Momentary speed measured by the vehicle, in meters per second. References GTFS-Realtime odometer   minimum: 0 number Odometer value, in meters. References GTFS-Realtime schedule_deviation integer Indicates schedule adherence in seconds. A negative value represents an early vehicle. (An unscheduled trip would not have a scheduled deviation.) headway_deviation integer Indicates headway adherence in seconds. A negative value represents a shorter than scheduled headway. in_service Allowed Values - <code>In passenger service</code>- <code>En-route to service</code>- <code>Traveling from a service trip</code>- <code>On a layover</code>- <code>Returning to a garage due to a suspension or breakdown</code>- <code>Travel for on-route replacement of breakdown</code>- <code>Other not in service</code> string Indicates status of travel with regard to service. schedule_relationship Allowed Values - <code>Scheduled</code>- <code>Skipped</code>- <code>No data</code>- <code>Unscheduled</code> string Indicates the status of the stop. References GTFS-realtime VehiclePosition.trip.schedule_relationship"},{"location":"tables/#summary-tables","title":"Summary Tables","text":""},{"location":"tables/#station-activities","title":"Station Activities","text":"<p>station_activities.schema.json</p> <p>Summarized transactions, entries, and exits by stop or station and time period for each service date (for events not associated with a trip).</p> <p>Primary key: {<code>stop_id</code>, <code>service_date</code>, <code>time_period_end</code>, <code>time_period_start</code>}</p> name constraints type description title service_date Required date Service date stop_id Required string Identifies stop. References GTFS ID referencing  GTFS stops.stop_id time_period_start Required datetime Aggregation period start time. time_period_end Required datetime Aggregation period end time. time_period_category string Indicates a standard time period to aid further aggregation. For example:All dayPeakOff-peakSummerOther total_entries   minimum: 0 integer Number of events at the stop considered entries, such as boardings or fare transactions. total_exits   minimum: 0 integer Number of events at the stop considered exits, such as alightings. number_of_transactions   minimum: 0 integer Number of fare transactions that occurred at a stop. bike_entries   minimum: 0 integer Number of bikes that entered the stop. bike_exits   minimum: 0 integer Number of bikes that exited the stop. ramp_entries   minimum: 0 integer Number of entries that used a ramp or accessible entrance. ramp_exits   minimum: 0 integer Number of exits that used a ramp or accessible exit."},{"location":"tables/#stop-visits","title":"Stop Visits","text":"<p>stop_visits.schema.json</p> <p>Summarized boarding, alighting, arrival, departure, and other events (kneel engaged, ramp deployed, etc.) by trip and stop for each service date.</p> <p>Primary key: {<code>trip_id_performed</code>, <code>vehicle_id</code>, <code>service_date</code>, <code>stop_sequence</code>}</p> name constraints type description title service_date Required date Service date. References GTFS indirectly via calendars.txt and calendar_dates.txt trip_id_performed Required string Identifies the trip performed ID referencing trips_performed.trip_id_performed stop_sequence Required  minimum: 0 integer Ordered stop the vehicle is serving on a particular trip. References GTFS positive integer referencing  GTFS stop_times.stop_sequence pattern_id string Identifies the unique stop-path for a trip, may be distinct from GTFS shapes.shape_id unique identifier for the route-pattern vehicle_id Required string Identifies the vehicle. ID referencing vehicles.vehicle_id dwell   minimum: 0 integer Indicates the amount of time a vehicle spent stopped at a stop in seconds. stop_id string Identifies the stop. References GTFS ID referencing  GTFS stops.stop_id timepoint boolean Indicates if the stop should be used for evaluating schedule adherence, on-time performance, and other KPIs. This could be populated to match the GTFS \u201ctimepoint\u201d field. schedule_arrival_time datetime Scheduled timestamp at which the vehicle arrives at a stop. References GTFS schedule_departure_time datetime Scheduled timestamp at which the vehicle departs from a stop. References GTFS actual_arrival_time datetime Timestamp at which the vehicle arrives at a stop. actual_departure_time datetime Timestamp at which the vehicle departs from a stop. distance   minimum: 0 integer Observed distance in meters from the previous stop traveled by the vehicle. boarding_1   minimum: 0 integer Number of riders who entered through the vehicle\u2019s front doors (in vehicles with doors opening on only one side, or when passengers primarily board through the front, as is typical with buses) or the vehicle\u2019s right doors (in vehicles with doors on both sides, or when passengers board through all doors, as is typical with trains). alighting_1   minimum: 0 integer Number of riders who exited through the vehicle\u2019s front doors (in vehicles with doors opening on only one side, or when passengers primarily board through the front, as is typical with buses) or the vehicle\u2019s right doors (in vehicles with doors on both sides, or when passengers board through all doors, as is typical with trains). boarding_2   minimum: 0 integer Number of riders who entered through other doors, such as a bus\u2019s rear door when boarding_1 captures the front door, or a train\u2019s left doors when boarding_1 captures right doors. alighting_2   minimum: 0 integer Number of riders who exited through other doors, such as a bus\u2019s rear door when alighting_1 captures the front door, or a train\u2019s left doors when alighting_1 captures right doors. departure_load   minimum: 0 integer Number of riders on the vehicle when departing the stop. door_open datetime Timestamp at which the doors opened. door_close datetime Timestamp at which the doors closed. door_status Allowed Values - <code>Doors did not open</code>- <code>Front door opened and back doors remain closed</code>- <code>Back doors opened and front door remained closed</code>- <code>All doors opened</code>- <code>Other configuration</code> string Indicates actions of the doors during the stop visit. ramp_deployed_time   minimum: 0 number Duration of time a ramp is deployed, in seconds. ramp_failure boolean Indicates if the ramp deployment failed at a stop. kneel_deployed_time   minimum: 0 number Duration of time a kneel is deployed in seconds. lift_deployed_time   minimum: 0 number Duration of time in seconds of time a lift is deployed. bike_rack_deployed boolean Indicates if the bike rack was deployed at a stop. bike_load   minimum: 0 integer Number of bikes on the vehicle when departing the stop. revenue number Amount of revenue collected at the stop. number_of_transactions   minimum: 0 integer Number of fare transactions that occurred at a stop. schedule_relationship Allowed Values - <code>Scheduled</code>- <code>Skipped</code>- <code>Missing data</code>- <code>Unscheduled</code>- <code>Canceled</code>- <code>Duplicated</code>- <code>Schedule modified</code> string Indicates the status of stop\u2019s service on the trip.(Note: schedule_arrival_time and schedule_departure_time may differ from GTFS in the case of a schedule modification). References GTFS-realtime TripUpdate"},{"location":"tables/#trips-performed","title":"Trips Performed","text":"<p>trips_performed.schema.json</p> <p>Trips performed for each service date.</p> <p>Primary key: {<code>trip_id_performed</code>, <code>service_date</code>}</p> name constraints type description title service_date Required date Service date. References GTFS trip_id_performed Required string Uniquely identifies the trip performed. It must be unique for a service_date (and it can optionally be unique across all time). It does not have to equal trip_id_scheduled. vehicle_id Required string Identifies the vehicle. ID referencing vehicles.vehicle_id trip_id_scheduled string Identifies the scheduled trip associated with the trip performed. One scheduled trip may be associated with multiple operated trips, or an operated trip may not be associated with a scheduled trip. References GTFS.  If this trip was published in GTFS Schedule, this value should be consistent with the GTFS <code>trip_id</code>.  If this trip was not scheduled, the value should be Null. ID referencing  GTFS trips.trip_id route_id string Identifies the route. References GTFS ID referencing  GTFS routes.route_id route_type Allowed Values - <code>Tram / Streetcar / Light rail</code>- <code>Subway / Metro</code>- <code>Rail</code>- <code>Bus</code>- <code>Ferry</code>- <code>Cable tram</code>- <code>Aerial lift</code>- <code>Funicular</code>- <code>Trolleybus</code>- <code>Monorail</code>- <code>Railway Service</code>- <code>High Speed Rail Service</code>- <code>Long Distance Trains</code>- <code>Inter Regional Rail Service</code>- <code>Car Transport Rail Service</code>- <code>Sleeper Rail Service</code>- <code>Regional Rail Service</code>- <code>Tourist Railway Service</code>- <code>Rail Shuttle (Within Complex)</code>- <code>Suburban Railway</code>- <code>Replacement Rail Service</code>- <code>Special Rail Service</code>- <code>Lorry Transport Rail Service</code>- <code>All Rail Services</code>- <code>Cross-Country Rail Service</code>- <code>Vehicle Transport Rail Service</code>- <code>Rack and Pinion Railway</code>- <code>Additional Rail Service</code>- <code>Coach Service</code>- <code>International Coach Service</code>- <code>National Coach Service</code>- <code>Shuttle Coach Service</code>- <code>Regional Coach Service</code>- <code>Special Coach Service</code>- <code>Sightseeing Coach Service</code>- <code>Tourist Coach Service</code>- <code>Commuter Coach Service</code>- <code>All Coach Services</code>- <code>Urban Railway Service</code>- <code>Metro Service</code>- <code>Underground Service</code>- <code>All Urban Railway Services</code>- <code>Bus Service</code>- <code>Regional Bus Service</code>- <code>Express Bus Service</code>- <code>Stopping Bus Service</code>- <code>Local Bus Service</code>- <code>Night Bus Service</code>- <code>Post Bus Service</code>- <code>Special Needs Bus</code>- <code>Mobility Bus Service</code>- <code>Mobility Bus for Registered Disabled</code>- <code>Sightseeing Bus</code>- <code>Shuttle Bus</code>- <code>School Bus</code>- <code>School and Public Service Bus</code>- <code>Rail Replacement Bus Service</code>- <code>Demand and Response Bus Service</code>- <code>All Bus Services</code>- <code>Trolleybus Service</code>- <code>Tram Service</code>- <code>City Tram Service</code>- <code>Local Tram Service</code>- <code>Regional Tram Service</code>- <code>Sightseeing Tram Service</code>- <code>Shuttle Tram Service</code>- <code>All Tram Services</code>- <code>Water Transport Service</code>- <code>Air Service</code>- <code>Ferry Service</code>- <code>Aerial Lift Service</code>- <code>Telecabin Service</code>- <code>Cable Car Service</code>- <code>Elevator Service</code>- <code>Chair Lift Service</code>- <code>Drag Lift Service</code>- <code>Small Telecabin Service</code>- <code>All Telecabin Services</code>- <code>Funicular Service</code>- <code>Taxi Service</code>- <code>Communal Taxi Service</code>- <code>Water Taxi Service</code>- <code>Rail Taxi Service</code>- <code>Bike Taxi Service</code>- <code>Licensed Taxi Service</code>- <code>Private Hire Service Vehicle</code>- <code>All Taxi Services</code>- <code>Miscellaneous Service</code>- <code>Horse-drawn Carriage</code> string Indicates the type of transportation used on a route. References GTFS routes.route_type including Google\u2019s Extended Route Types GTFS extension ntd_mode Allowed Values - <code>Aerial Tramway</code>- <code>Alaska Railroad</code>- <code>Bus</code>- <code>Bus Rapid Transit</code>- <code>Cable Car</code>- <code>Commuter Bus</code>- <code>Commuter Rail</code>- <code>Demand Response</code>- <code>Demand Taxi</code>- <code>Ferryboat</code>- <code>Heavy Rail</code>- <code>Hybrid Rail</code>- <code>Inclined Plane</code>- <code>Jitney</code>- <code>Light Rail</code>- <code>Monorail/Automated Guideway</code>- <code>Other</code>- <code>P\u00fablico</code>- <code>Streetcar</code>- <code>Trolleybus</code>- <code>Vanpool</code> string NTD mode, references the Modes and Types of Service section of the Introduction to the NTD Full Reporting Policy Manual https://www.transit.dot.gov/ntd/manuals route_type_agency string Agency specific route type shape_id string Identifies a geospatial shape that describes the vehicle travel path for a trip. References GTFS ID referencing shapes.shape_id pattern_id string Identifies the unique stop-path for a trip, may be distinct from GTFS shapes.shape_id unique identifier for the route-pattern direction_id Allowed Values - <code>0</code>- <code>1</code> integer Indicates the direction of travel for a trip. References GTFS operator_id string Identifies the vehicle\u2019s operator. ID referencing operators.operator_id block_id string Identifies the block to which the trip belongs. A block consists of a single trip, or many sequential trips made using the same vehicle, defined by shared service days and block_id. A block_id can have trips with different service days, making distinct blocks. See example in GTFS documentation. References GTFS ID referencing trips.block_id trip_start_stop_id string Origin stop_id. References GTFS ID referencing  GTFS stops.stop_id trip_end_stop_id string Destination stop_id. References GTFS ID referencing  GTFS stops.stop_id schedule_trip_start datetime Scheduled departure time from the trip\u2019s origin. schedule_trip_end datetime Scheduled end timestamp at the trip\u2019s destination. actual_trip_start datetime Timestamp at which the vehicle departed its origin. actual_trip_end datetime Timestamp at which the vehicle arrived at its destination. service_status Allowed Values - <code>In passenger service</code>- <code>En-route to service</code>- <code>Traveling from a service trip</code>- <code>On a layover</code>- <code>Returning to a garage due to a suspension or breakdown</code>- <code>Travel for on-route replacement of breakdown</code>- <code>Other not in service</code> string Indicates status of travel with regard to service. schedule_relationship Allowed Values - <code>Scheduled</code>- <code>Added</code>- <code>Unscheduled</code>- <code>Canceled</code>- <code>Duplicated</code> string Indicates the status of the trip. References GTFS-realtime TripUpdate.trip.schedule_relationship"},{"location":"tables/#supporting-tables","title":"Supporting Tables","text":""},{"location":"tables/#devices","title":"Devices","text":"<p>devices.schema.json</p> <p>Measurement devices, such as AVL, APC, and AFC devices, associated with vehicles or stops or stations.</p> <p>Primary key: {<code>device_id</code>}</p> name constraints type description title device_id RequiredUnique string Identifies a device. If possible, this should match other internal agency device IDs. stop_id string Identifies the stop (or other location) at which the device is located. May be null if the device is on a vehicle. References GTFS ID referencing  GTFS stops.stop_id vehicle_id string Identifies the vehicle on which the device is located. May be null if the device is at a stop or station. ID referencing vehicles.vehicle_id train_car_id string Identifies the train car or asset on which the device is located. May be null if the device is at a stop or station or if the Train_cars file is not used. ID referencing train_cars.train_car_id device_type Allowed Values - <code>farebox</code>- <code>fare gate</code>- <code>fare vending machine</code>- <code>passenger counter</code>- <code>vehicle location</code>- <code>other</code> string Indicates the type of device. device_vendor string Vendor of the device. device_model string Model of the device as specified by the vendor. device_location string Indicates the location of a device on the vehicle or at a station. For example:Front door.Back door.Entrance (not located on a vehicle).Exit (not located on a vehicle).Entrance/exit (not located on a vehicle).Other."},{"location":"tables/#operators","title":"Operators","text":"<p>operators.schema.json</p> <p>Personnel who operate vehicles.</p> <p>Primary key: {<code>operator_id</code>}</p> name constraints type description operator_id RequiredUnique string Identifies an operator. If possible, this should match other internal agency operator IDs."},{"location":"tables/#train-cars","title":"Train Cars","text":"<p>train_cars.schema.json</p> <p>Assets that comprise vehicles, such as train cars, with descriptive information.</p> <p>Primary key: {<code>train_car_id</code>}</p> name constraints type description train_car_id RequiredUnique string Identifies a train car or asset. If possible, this should match other internal agency asset IDs. model_name string Describes the train car or asset\u2019s model. facility_name string Name or internal agency ID for the facility where the train car or asset is generally held. capacity_seated   minimum: 0 integer Number of seats on the train car or asset. wheelchair_capacity   minimum: 0 integer Number of wheelchair spaces on the train car or asset. bike_capacity   minimum: 0 integer Number of bike spaces on the train car or asset. bike_rack boolean Indicates if the train car or asset has a usable bike rack. capacity_standing   minimum: 0 integer Standing capacity of the train car or asset set by the manufacturer. train_car_type Allowed Values - <code>Train car</code>- <code>Trolley</code>- <code>Other</code> string Indicates the type of train car or asset."},{"location":"tables/#vehicle-train-cars","title":"Vehicle Train Cars","text":"<p>vehicle_train_cars.schema.json</p> <p>Relationships between assets and vehicles.</p> <p>Primary key: {<code>vehicle_id</code>, <code>train_car_id</code>}</p> name constraints type description title vehicle_id Required string Identifies a vehicle, such as a train consist. If possible, this should match other internal agency vehicle IDs. ID referencing vehicles.vehicle_id train_car_id Required string Identifies a train car or an asset that is a component of the vehicle. ID referencing train_cars.train_car_id train_car_order   minimum: 0 integer The assigned order of the train car or asset within the vehicle. operator_id string Identifies an operator (person). If possible, this should match other internal agency operator IDs."},{"location":"tables/#vehicles","title":"Vehicles","text":"<p>vehicles.schema.json</p> <p>Vehicles, including buses and train consists, with descriptive information.</p> <p>Primary key: {<code>vehicle_id</code>}</p> name constraints type description vehicle_id RequiredUnique string Identifies a vehicle, such as a bus or a train consist. If possible, this should match other internal agency vehicle IDs and the GTFS-realtime VehicleDescriptor. vehicle_start datetime The timestamp at which the vehicle or train consist is first in operation (i.e., when the consist has been created). Required if Train_car is used. vehicle_end datetime The timestamp at which the vehicle or train consist no longer exists (i.e., the consist is separated or modified). Only used if Train_car is used. model_name string Describes the vehicle\u2019s model. facility_name string Name or internal agency ID for the facility where the vehicle is generally held. capacity_seated   minimum: 0 integer Number of seats on the vehicle. Used if Train_car is not used. wheelchair_capacity   minimum: 0 integer Number of wheelchair spaces on the vehicle. Used if Train_car is not used. capacity_bike   minimum: 0 integer Number of bike spaces on the vehicle. Used if Train_car is not used. bike_rack boolean Indicates if the vehicle has a useable bike rack. Used if Train_car is not used. capacity_standing   minimum: 0 integer Standing capacity of the vehicle set by the manufacturer. Used if Train_car is not used."}]}
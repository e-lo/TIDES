{
 "$schema": "http://json-schema.org/draft-04/schema",
  "title": "TIDES Data Package",
  "description": "TIDES Data Package is a simple specification for data access and delivery of tabular TIDES transit data.",
  "type": "object",
  "$defs": {
    "resource-name": {
      "propertyOrder": 10,
      "title": "Resource Name",
      "description": "An identifier string corresponding to the name of one of the table specs in the TIDES data package",
      "type": "string",
      "pattern": "^([-a-z0-9._/])+$",
      "examples": [
        "fare_transactions",
        "train_cars"
      ]
    },
    "csv_dialect": {
      "propertyOrder": 50,
      "title": "CSV Dialect",
      "description": "The CSV dialect descriptor.",
      "type": [
        "string",
        "object"
      ],
      "required": [
        "delimiter",
        "doubleQuote"
      ],
      "properties": {
        "csvddfVersion": {
          "title": "CSV Dialect schema version",
          "description": "A number to indicate the schema version of CSV Dialect. Version 1.0 was named CSV Dialect Description Format and used different field names.",
          "type": "number",
          "default": 1.2,
          "examples:": [
            "1.2"
          ]
        },
        "delimiter": {
          "title": "Delimiter",
          "description": "A character sequence to use as the field separator.",
          "type": "string",
          "default": ",",
          "examples": [
            ",",
            ";"
          ]
        },
        "doubleQuote": {
          "title": "Double Quote",
          "description": "Specifies the handling of quotes inside fields.",
          "context": "If Double Quote is set to true, two consecutive quotes must be interpreted as one.",
          "type": "boolean",
          "default": true,
          "examples": [
            "true"
          ]
        },
        "lineTerminator": {
          "title": "Line Terminator",
          "description": "Specifies the character sequence that must be used to terminate rows.",
          "type": "string",
          "default": "\r\n",
          "examples": [
            "\\r\\n",
            "\\n"
          ]
        },
        "nullSequence": {
          "title": "Null Sequence",
          "description": "Specifies the null sequence, for example, `\\N`.",
          "type": "string",
          "examples": [
            "\\N"
          ]
        },
        "quoteChar": {
          "title": "Quote Character",
          "description": "Specifies a one-character string to use as the quoting character.",
          "type": "string",
          "default": "\"",
          "examples": [
            "'"
          ]
        },
        "escapeChar": {
          "title": "Escape Character",
          "description": "Specifies a one-character string to use as the escape character.",
          "type": "string",
          "examples": [
            "\\"
          ]
        },
        "skipInitialSpace": {
          "title": "Skip Initial Space",
          "description": "Specifies the interpretation of whitespace immediately following a delimiter. If false, whitespace immediately after a delimiter should be treated as part of the subsequent field.",
          "type": "boolean",
          "default": false,
          "examples": [
            "true"
          ]
        },
        "header": {
          "title": "Header",
          "description": "Specifies if the file includes a header row, always as the first row in the file.",
          "type": "boolean",
          "default": true,
          "examples": [
            "true"
          ]
        },
        "commentChar": {
          "title": "Comment Character",
          "description": "Specifies that any row beginning with this one-character string, without preceeding whitespace, causes the entire line to be ignored.",
          "type": "string",
          "examples": [
            "//"
          ]
        },
        "caseSensitiveHeader": {
          "title": "Case Sensitive Header",
          "description": "Specifies if the case of headers is meaningful.",
          "context": "Use of case in source CSV files is not always an intentional decision. For example, should \"CAT\" and \"Cat\" be considered to have the same meaning.",
          "type": "boolean",
          "default": false,
          "examples": [
            "true"
          ]
        }
      }
    },
    "person": {
      "description": "A person related to this project.",
      "context": "Use of this property does not imply that the person was the original creator of, or a contributor to, the data in the descriptor, but refers to the composition of the descriptor itself.",
      "properties": {
        "name": {
          "title": "Name",
          "description": "A human-readable name.",
          "type": "string",
          "examples": [
            "Daniel Tiger"
          ]
        },
        "email": {
          "title": "Email",
          "description": "An email address.",
          "type": "string",
          "format": "email",
          "examples": [
            "daniel@makebelievetrolley.gov"
          ]
        },
        "organization": {
          "title": "Organization",
          "description": "An organizational affiliation for this contributor.",
          "type": "string",
          "examples": [
            "Tiger Family"
          ]
        },
        "role": {
          "title": "Role",
          "description": "The person's role in the project",
          "type": "string",
          "default": "Kideriffic contributor"
        }
      }
    },
    "license":{
      "description": "A license describing the legal use of the entity it is associated with.",
      "context": "Implementations need to negotiate the type of path provided, and dereference the data accordingly.",
      "type": "object",
      "anyOf": [
        {
          "required": [
            "name"
          ]
        },
        {
          "required": [
            "path"
          ]
        }
      ],
      "properties": {
        "name": {
          "title": "Open Definition license identifier",
          "description": "MUST be an Open Definition license identifier, see http://licenses.opendefinition.org/",
          "type": "string",
          "default": "CC-BY-4.0",
          "pattern": "^([-a-zA-Z0-9._])+$"
        },
        "path": {
          "title": "Path",
          "description": "A fully qualified public URL, or a relative Unix-style file path.",
          "type": "string",
          "pattern": "^(?=^[^./~])(^((?!\\.{2}).)*$).*$",
          "default":"https://creativecommons.org/licenses/by/4.0/",
          "examples": [
            "LICENSE",
            "https://opensource.org/license/apache-2-0"
          ]
        }
      }
    },
    "source":{
      "title": "Source",
      "description": "A source file.",
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "title": {
          "title": "Title",
          "description": "Description of the data source.",
          "type": "string",
          "examples": [
            "My Package Title"
          ]
        },
        "component": {
          "title": "Component",
          "description": "What technology component was used to generate this data (directly or indirectly)? Examples include `AVL`, `APC`, `AFC`, etc.",
          "type": "string"
        },
        "product": {
          "title": "Product",
          "description": "What product was used to generate this data (directly or indirectly)?",
          "type": "string"
        },
        "product_version": {
          "title": "Product Version",
          "description": "Describe the version of the product was used.",
          "type": "string"
        },
        "vendor": {
          "title": "Vendor",
          "description": "What company makes this product?",
          "type": "string"
        }
      }
    },
    "resource:tides": {
      "required": [
        "path"
      ],
      "type": "object",
      "properties": {
        "profile": {
          "const": "tabular-data-resource",
          "propertyOrder": 10,
          "default": "tabular-data-resource",
          "description": "Schema of resource description."
        },
        "path": {
          "propertyOrder": 30,
          "description": "A reference to the data for this resource, as a valid URI string.",
          "type": "string",
          "default": "TODO:a\\path\\to\\resource",
          "pattern": "^(?=^[^./~])(^((?!\\.{2}).)*$).*$",
          "examples": [
            "file.csv"
          ]
        },
        "title": {
          "description": "A human-readable title.",
          "type": "string",
          "default": "TODO: Enter title.",
          "examples": [
            "X observations from Y."
          ],
          "propertyOrder": 50
        },
        "description": {
          "description": "A text description. Markdown is encouraged.",
          "type": "string",
          "default": "TODO: Enter Description.",
          "examples": [
            "My file description. All about my data file."
          ],
          "propertyOrder": 60
        },
        "homepage": {
          "propertyOrder": 70,
          "description": "Relevant webpage for this file.",
          "type": "string",
          "format": "uri",
          "examples": [ "http://example.com"]
        },
        "sources": {
          "propertyOrder": 140,
          "options": {
            "hidden": true
          },
          "title": "Sources",
          "description": "The raw sources for this resource.",
          "type": "array",
          "minItems": 1,
          "items": {"$ref": "$defs/source"}
        },
        "licenses": {
          "description": "Should be `[{\"name\": \"Apache-2.0\"}]` to be consistent with this repository",
          "propertyOrder": 150,
          "options": {
            "hidden": true
          },
          "title": "Licenses",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "$defs/license"
          }
        },
        "dialect": {
          "$ref": "$defs/csv-dialect"
        },
        "format": {
          "propertyOrder": 80,
          "description": "The file format of this resource.",
          "context": "`csv`, `xls`, `json` are examples of common formats.",
          "type": "string",
          "default": "csv",
          "examples": [
            "xls"
          ]
        },
        "mediatype": {
          "propertyOrder": 90,
          "title": "Media Type",
          "description": "The media type of this resource. Can be any valid media type listed with [IANA](https://www.iana.org/assignments/media-types/media-types.xhtml).",
          "type": "string",
          "pattern": "^(.+)/(.+)$",
          "default": "text/csv",
          "examples": [
            "text/csv"
          ]
        },
        "encoding": {
          "propertyOrder": 100,
          "description": "The file encoding of this resource.",
          "type": "string",
          "default": "utf-8",
          "examples": [
            "utf-8"
          ]
        },
        "bytes": {
          "propertyOrder": 110,
          "options": {
            "hidden": true
          },
          "title": "Bytes",
          "description": "The size of this resource in bytes.",
          "type": "integer",
          "examples": [
            "2082"
          ]
        },
        "hash": {
          "propertyOrder": 120,
          "options": {
            "hidden": true
          },
          "title": "Hash",
          "type": "string",
          "description": "The MD5 hash of this resource. Indicate other hashing algorithms with the {algorithm}:{hash} format.",
          "pattern": "^([^:]+:[a-fA-F0-9]+|[a-fA-F0-9]{32}|)$",
          "examples": [
            "d25c9c77f588f5dc32059d2da1136c02",
            "SHA256:5262f12512590031bbcc9a430452bfd75c2791ad6771320bb4b5728bfb78c4d0"
          ]
        }
      }
    },
    "resource:devices":{
      "allOf": [
        { "$ref": "$defs/resource:tides"},
        { "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "required": [
                "name",
                "path"
              ],
              "properties":{
                "name": {
                  "const":"devices",
                  "default": "devices"
                },
                "path": {
                  "pattern":"**devices.schema.json",
                  "default": "devices.schema.json",
                  "description": "Path to devices schema."
                }
              }
            }
          }
        }
      ]
    },
    "resource:fare_transactions":{
      "allOf": [
        { "$ref": "$defs/resource:tides"},
        { "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "required": [
                "name",
                "path"
              ],
              "properties":{
                "name": {
                  "const":"fare_transactions",
                  "default": "fare_transactions"
                },
                "path": {
                  "pattern":"**fare_transactions.schema.json",
                  "default": "fare_transacstionsschema.json",
                  "description": "Path to fare transactions schema."
                }
              }
            }
          }
        }
      ]
    },
    "resource:operators":{
      "allOf": [
        { "$ref": "$defs/resource:tides"},
        { "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "required": [
                "name",
                "path"
              ],
              "properties":{
                "name": {
                  "const":"operators",
                  "default": "operators"
                },
                "path": {
                  "pattern":"**operators.schema.json",
                  "default": "operators.schema.json",
                  "description": "Path to operators schema."
                }
              }
            }
          }
        }
      ]
    },
    "resource:passenger_events":{
      "allOf": [
        { "$ref": "$defs/resource:tides"},
        { "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "required": [
                "name",
                "path"
              ],
              "properties":{
                "name": {
                  "const":"passenger_events",
                  "default": "passenger_events"
                },
                "path": {
                  "pattern":"**passenger_events.schema.json",
                  "default": "passenger_events.schema.json",
                  "description": "Path to passenger_events schema."
                }
              }
            }
          }
        }
      ]
    },
    "resource:station_activities":{
      "allOf": [
        { "$ref": "$defs/resource:tides"},
        { "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "required": [
                "name",
                "path"
              ],
              "properties":{
                "name": {
                  "const":"station-activities",
                  "default": "station_activities"
                },
                "path": {
                  "pattern":"**station_activities.schema.json",
                  "default": "station_activities.schema.json",
                  "description": "Path to station_activities schema."
                }
              }
            }
          }
        }
      ]
    },
    "resource:stop_visits":{
      "allOf": [
        { "$ref": "$defs/resource:tides"},
        { "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "required": [
                "name",
                "path"
              ],
              "properties":{
                "name": {
                  "const":"stop_visits",
                  "default": "stop_visits"
                },
                "path": {
                  "pattern":"**stop_visits.schema.json",
                  "default": "stop_visits.schema.json",
                  "description": "Path to stop_visits schema."
                }
              }
            }
          }
        }
      ]
    },
    "resource:train_cars":{
      "allOf": [
        { "$ref": "$defs/resource:tides"},
        { "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "required": [
                "name",
                "path"
              ],
              "properties":{
                "name": {
                  "const":"train_cars",
                  "default": "train_cars"
                },
                "path": {
                  "pattern":"**train_cars.schema.json",
                  "default": "train_cars.schema.json",
                  "description": "Path to train_cars schema."
                }
              }
            }
          }
        }
      ]
    },
    "resource:trips_performed":{
      "allOf": [
        { "$ref": "$defs/resource:tides"},
        { "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "required": [
                "name",
                "path"
              ],
              "properties":{
                "name": {
                  "const":"trips_performed",
                  "default": "trips_performed"
                },
                "path": {
                  "pattern":"**trips_performed.schema.json",
                  "default": "trips_performed.schema.json",
                  "description": "Path to trips_performed schema."
                }
              }
            }
          }
        }
      ]
    },
    "resource:vehicle_locations":{
      "allOf": [
        { "$ref": "$defs/resource:tides"},
        { "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "required": [
                "name",
                "path"
              ],
              "properties":{
                "name": {
                  "const":"vehicle_locations",
                  "default": "vehicle_locations"
                },
                "path": {
                  "pattern":"**vehicle_locations.schema.json",
                  "default": "vehicle_locations.schema.json",
                  "description": "Path to vehicle_locations schema."
                }
              }
            }
          }
        }
      ]
    },
    "resource:vehicle_train_cars":{
      "allOf": [
        { "$ref": "$defs/resource:tides"},
        { "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "required": [
                "name",
                "path"
              ],
              "properties":{
                "name": {
                  "const":"vehicle_train_cars",
                  "default": "vehicle_train_cars"
                },
                "path": {
                  "pattern":"**vehicle_train_cars.schema.json",
                  "default": "vehicle_train_cars.schema.json",
                  "description": "Path to vehicle_train_cars schema."
                }
              }
            }
          }
        }
      ]
    },
    "resource:vehicles":{
      "allOf": [
        { "$ref": "$defs/resource:tides"},
        { "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "required": [
                "name",
                "path"
              ],
              "properties":{
                "name": {
                  "const":"vehicles",
                  "default": "vehicles"
                },
                "path": {
                  "pattern":"**vehicles.schema.json",
                  "default": "vehicles.schema.json",
                  "description": "Path to vehicles schema."
                }
              }
            }
          }
        }
      ]
    }
  },
  "required": [
    "profile",
    "resources",
    "title"
  ],
  "properties": {
    "profile": {
      "const": "tides-data-package",
      "propertyOrder": 10,
      "description": "The TIDES-specific profile used to validate the TIDES data package. See [Data Package specification](https://specs.frictionlessdata.io/data-package).",
      "type": "string"
    },
    "version": {
      "pattern": "^([0-9]+).([0-9]+).([0-9]+)$",
      "propertyOrder": 11,
      "type": "string",
      "description": "Version (Major, Minor, Patch) identifier",
      "example": "0.0.1"
    },
    "title": {
      "propertyOrder": 20,
      "description": "A human-readable title.",
      "type": "string",
      "examples": [
        "My TIDES Data Package Title"
      ]
    },
    "name": {
      "propertyOrder": 30,
      "description": "Short sluggable (https://en.wikipedia.org/wiki/Clean_URL) identifier string.",
      "type": "string",
      "pattern": "^([-a-z0-9._/])+$",
      "context": "This is ideally a url-usable and human-readable name. Name `SHOULD` be invariant, meaning it `SHOULD NOT` change when its parent descriptor is updated.",
      "examples": [
        "2023-XX-tides-data-package"
      ]
    },
    "description": {
      "propertyOrder": 40,
      "format": "textarea",
      "description": "Short description of TIDES data package.",
      "type": "string",
      "examples": [
        "My Package description\\nAll about my package."
      ]
    },
    "agency": {
      "propertyOrder": 50,
      "description": "Transit agency name.",
      "type": "string",
      "examples": [
        "Neighborhood of Make Believe Trolley"
      ]
    },
    "ntd_id": {
      "propertyOrder": 60,
      "title": "NTD ID",
      "description": "ID for the National Transit Database.",
      "type": "string",
      "pattern": "^([-a-z0-9._/])+$",
      "context": "Background on NTD available at https://www.transit.dot.gov/ntd",
      "examples": [
        "0R02-00307"
      ]
    },
    "contributors": {
      "propertyOrder": 70,
      "description": "Array of data contributors and their role.",
      "type": "array",
      "minItems": 1,
      "items": {
          "$ref": "$defs/person"
      }
    },
    "maintainers": {
      "propertyOrder": 80,
      "description": "Array of data maintainers and their role.",
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "$defs/person"
      }
    },
    "licenses": {
      "propertyOrder": 90,
      "description": "The license(s) under which this package is published.",
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "$defs/license"
      }
    },
    "sources": {
      "propertyOrder": 110,
      "options": {
        "hidden": true
      },
      "title": "Sources",
      "description": "Array of data sources formatted as a source. Recommended to be documented either here at the top-level or for each individual resource",
      "type": "array",
      "minItems": 0,
      "items": {
        "$ref": "$defs/source"
      }
    },
    "resources": {
      "propertyOrder": 100,
      "title": "TIDES Data Files",
      "description": "Array of data files included in your package, formated as a tabular-data-resource",
      "type": "array",
      "minItems": 1,
      "items": {
        "anyOf": [
          {"$ref": "$defs/resource:devices"},
          {"$ref": "$defs/resource:fare_transactions"},
          {"$ref": "$defs/resource:operators"},
          {"$ref": "$defs/resource:passenger_events"},
          {"$ref": "$defs/resource:station_activities"},
          {"$ref": "$defs/resource:stop_visits"},
          {"$ref": "$defs/resource:train_cars"},
          {"$ref": "$defs/resource:trips_performed"},
          {"$ref": "$defs/resource:vehicle_locations_schema"},
          {"$ref": "$defs/resource:vehicle_train_cars"}
        ]
      }
    }
  }
}
